[{"/Users/andrewgamble/go/src/github.com/gamblea/doggo-photos/fe/src/index.js":"1","/Users/andrewgamble/go/src/github.com/gamblea/doggo-photos/fe/src/App.js":"2","/Users/andrewgamble/go/src/github.com/gamblea/doggo-photos/fe/src/reportWebVitals.js":"3","/Users/andrewgamble/go/src/github.com/gamblea/doggo-photos/fe/src/Login.js":"4","/Users/andrewgamble/go/src/github.com/gamblea/doggo-photos/fe/src/CreateAccount.js":"5","/Users/andrewgamble/go/src/github.com/gamblea/doggo-photos/fe/src/Dashboard.js":"6"},{"size":500,"mtime":1608515744455,"results":"7","hashOfConfig":"8"},{"size":1962,"mtime":1610255910015,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608515744455,"results":"10","hashOfConfig":"8"},{"size":2751,"mtime":1610255834456,"results":"11","hashOfConfig":"8"},{"size":3424,"mtime":1610255922026,"results":"12","hashOfConfig":"8"},{"size":6352,"mtime":1610257053551,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1re9xi",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/Users/andrewgamble/go/src/github.com/gamblea/doggo-photos/fe/src/index.js",[],["28","29"],"/Users/andrewgamble/go/src/github.com/gamblea/doggo-photos/fe/src/App.js",[],"/Users/andrewgamble/go/src/github.com/gamblea/doggo-photos/fe/src/reportWebVitals.js",[],"/Users/andrewgamble/go/src/github.com/gamblea/doggo-photos/fe/src/Login.js",[],"/Users/andrewgamble/go/src/github.com/gamblea/doggo-photos/fe/src/CreateAccount.js",[],"/Users/andrewgamble/go/src/github.com/gamblea/doggo-photos/fe/src/Dashboard.js",["30"],"import { Row, Col, Button, Form, Alert } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport Cookies from \"js-cookie\";\nimport Gallery from \"react-photo-gallery\";\n\nexport function Dashboard({ loginKey, setloginKey }) {\n  const history = useHistory();\n  const [upload, setUpload] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [refresh, setRefresh] = useState(0);\n  useEffect(() => {\n    if (loginKey) {\n      axios\n        .post(`/api/account/user`, {\n          loginKey: loginKey,\n        })\n        .then((res) => {\n          const username = res.data?.username;\n          const error = res.data?.error;\n          //const photos = res.data?.photos;\n          if (username) {\n            setUsername(username);\n            setRefresh(refresh + 1);\n          } else {\n          }\n          if (error) {\n            Cookies.remove(\"doggo-photos-loginKey\");\n            setloginKey(\"\");\n          }\n        })\n        .catch(() => {\n          Cookies.remove(\"doggo-photos-loginKey\");\n          setloginKey(\"\");\n        });\n    }\n  }, [loginKey]);\n  return (\n    <div style={{ padding: \"5em\" }}>\n      <Row>\n        <Col>\n          {username ? (\n            <div>\n              <Row></Row>\n              <Col md=\"3\"></Col>\n              <Col>\n                <h2 style={{ textAlign: \"center\" }}>\n                  {capitalizeFirstLetter(username)}'s Doggo Photos\n                </h2>\n              </Col>\n              <Col md=\"3\"></Col>\n\n              <Row>\n                <Col>\n                  <div style={{ textAlign: \"center\", minHeight: \"600px\" }}>\n                    <div>\n                      {upload ? (\n                        <UploadPhotos\n                          loginKey={loginKey}\n                          setUpload={setUpload}\n                        />\n                      ) : (\n                        <DogPhotos\n                          refresh={refresh}\n                          loginKey={loginKey}\n                          setloginKey={setloginKey}\n                          setUpload={setUpload}\n                          history={history}\n                        />\n                      )}\n                    </div>\n                  </div>\n                </Col>\n                {/* <Col md=\"6\" style={{ textAlign: \"center\" }}>\n                  Photos\n                </Col>\n                <Col md=\"6\" style={{ textAlign: \"center\" }}>\n                  Adding New Photos\n                </Col> */}\n              </Row>\n            </div>\n          ) : (\n            <div className=\"center-block text-center start-menu\">\n              <p>Please Login</p>\n              <Link to=\"/\">\n                <Button variant=\"primary\">Login</Button>\n              </Link>\n            </div>\n          )}\n        </Col>\n      </Row>\n    </div>\n  );\n}\nfunction capitalizeFirstLetter(word) {\n  return word.length > 0 ? word.charAt(0).toUpperCase() + word.slice(1) : \"\";\n}\n\nfunction CreateLogout(setloginKey, history) {\n  return () => {\n    Cookies.remove(\"doggo-photos-loginKey\");\n    setloginKey(\"\");\n    history.push(\"/\");\n  };\n}\n\n// Need to pull photos from db and create links for them\nfunction DogPhotos({ refresh, loginKey, setloginKey, setUpload, history }) {\n  const [photos, setPhotos] = useState([]);\n  useEffect(() => {\n    // Get Photos\n    axios\n      .post(`/api/account/photos`, {\n        loginKey: loginKey,\n      })\n      .then((res) => {\n        const photos = res.data?.photos;\n        //const error = res.data?.error;\n        if (photos) {\n          setPhotos(photos);\n        } else {\n          //const err = error ? error : \"Error\";\n          // set error state\n        }\n      });\n  }, [refresh, loginKey]);\n\n  return (\n    <div>\n      <div style={{ minHeight: \"400px\" }}>\n        {photos.length <= 0 ? (\n          <p>Add some photos of cute dogs!</p>\n        ) : (\n          <div>\n            <Gallery\n              photos={photos.map((photo) => {\n                if (!photo.src.includes(\"key\")) {\n                  photo.src = photo.src + `?key=${loginKey}`;\n                }\n                return photo;\n              })}\n            />\n          </div>\n        )}\n      </div>\n      <Row>\n        <Col>\n          <Button\n            variant=\"primary\"\n            style={{ float: \"left\" }}\n            onClick={() => {\n              setUpload(true);\n            }}\n          >\n            Upload Photos\n          </Button>\n        </Col>\n        <Col>\n          <Button\n            variant=\"primary\"\n            style={{ float: \"right\" }}\n            onClick={CreateLogout(setloginKey, history)}\n          >\n            Logout\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nfunction UploadPhotos({ loginKey, setUpload }) {\n  const [error, setError] = useState(\"\");\n  return (\n    <div>\n      <Row>\n        <Col md=\"4\"></Col>\n        <Col md=\"4\">\n          <div\n            style={{\n              minHeight: \"400px\",\n              margin: \"0 auto\",\n              textAlign: \"center\",\n            }}\n          >\n            <Form onSubmit={createSubmitUpload(loginKey, setUpload, setError)}>\n              <Form.Group controlId=\"files\">\n                <Form.Label>Upload Photos</Form.Label>\n                <Form.Control name=\"photos\" type=\"file\" multiple />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n            {error ? (\n              <div style={{ marginTop: \"10px\" }}>\n                <Alert variant=\"warning\">{error}</Alert>\n              </div>\n            ) : null}\n          </div>\n        </Col>\n        <Col md=\"4\"></Col>\n      </Row>\n\n      <Button\n        style={{ float: \"left\" }}\n        onClick={() => {\n          setUpload(false);\n        }}\n      >\n        Back\n      </Button>\n    </div>\n  );\n}\n\nfunction createSubmitUpload(loginKey, setUpload, setError) {\n  return function (event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n\n    data.set(\"loginKey\", loginKey);\n    axios.post(`/api/photos/upload`, data).then((res) => {\n      console.log(res);\n      const error = res.data?.error;\n      if (!error) {\n        setUpload(false);\n      } else {\n        setError(error);\n      }\n    });\n  };\n}\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":38,"column":6,"nodeType":"37","endLine":38,"endColumn":16,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'refresh' and 'setloginKey'. Either include them or remove the dependency array. If 'setloginKey' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [loginKey, refresh, setloginKey]",{"range":"44","text":"45"},[1163,1173],"[loginKey, refresh, setloginKey]"]